{
  "name": "confert",
  "version": "0.3.1",
  "description": "Directly require config files of any type",
  "main": "index.js",
  "scripts": {
    "test": "mocha test/test.js && mocha test/direct.js"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/rhalff/confert.git"
  },
  "keywords": [
    "config",
    "yaml",
    "ini",
    "xml",
    "json"
  ],
  "author": {
    "name": "Rob Halff"
  },
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/rhalff/confert/issues"
  },
  "homepage": "https://github.com/rhalff/confert",
  "dependencies": {
    "xml2json": "^0.5.1",
    "ini": "^1.3.0",
    "js-yaml": "^3.2.2"
  },
  "devDependencies": {
    "should": "^4.0.4",
    "mocha": "^1.21.4"
  },
  "readme": "Confert\n=======\n\n[![Build Status](https://travis-ci.org/rhalff/confert.svg?branch=master)](https://travis-ci.org/rhalff/confert)\n[![NPM version](https://img.shields.io/npm/v/confert.svg)](https://www.npmjs.org/package/confert)\n[![Dependency Status](https://david-dm.org/rhalff/confert.png?theme=shields.io)](https://david-dm.org/rhalff/confert)\n[![Development Dependency Status](https://david-dm.org/rhalff/confert/dev-status.png?theme=shields.io)](https://david-dm.org/rhalff/confert#info=devDependencies)\n\nRequire and convert config files of any type.\n\nConfert loads a named config file and leaves it up to the configer (user) in what kind of format it is.\n\n## Installation\n```\n$ npm install confert --save\n```\n\n## Usage\n```javascript\nvar config = require('confert')('my_config');\n```\n\nThis will look for a `my_config` file with one of the following extensions:\n\n - .yml\n - .yaml\n - .ini\n - .xml\n\nIf you want to fixate the config type you can load these modules directly.\n\n```javascript\nvar config = require('confert/yaml')('my_config');\nvar config = require('confert/ini')('my_config');\nvar config = require('confert/xml')('my_config');\n```\n\nBut it takes away the flexibility of absorbing any config file.\n\n### Options object\n\nRight now only the xml module receives some options, these are directly taken\nfrom xml2json:\n\n```javascript\n// Default values:\nvar options = {\n  sanitize: true,\n  trim: true\n};\n\n// Tries to load any extension, might .xml be found those options will be used.\nvar config = require('confert')('my_config', options);\n\n```\n\nFor XML the root element is required, yet the name is always ignored.\n\n### Example Configurations:\n\n#### XML:\n```xml\n<config> <!-- NOTE: the first element (config in this case) will be ignored -->\n  <scope>global</scope>\n  <database>\n    <user>dbuser</user>\n    <password>dbpassword</password>\n    <name>test</name>\n  </database>\n  <paths>\n    <default>\n      <datadir>/var/lib/data</datadir>\n      <array>first value</array>\n      <array>second value</array>\n      <array>third value</array>\n    </default>\n  </paths>\n</config>\n```\n\n#### YAML:\n```coffee\n---\nscope: global\ndatabase:\n  user: dbuser\n  password: dbpassword\n  name: test\npaths:\n  default:\n    datadir: /var/lib/data\n    array:\n      - 'first value'\n      - 'second value'\n      - 'third value'\n```\n\n#### INI:\n```ini\n; this comment is being ignored\nscope = global\n\n[database]\nuser = dbuser\npassword = dbpassword\nname = test\n\n[paths.default]\ndatadir = /var/lib/data\narray[] = first value\narray[] = second value\narray[] = third value\n```\n\n\n#### Result\n\nAll of the above will produce the exact same data structure:\n\n```json\n{\n  \"scope\": \"global\",\n  \"database\": {\n    \"user\": \"dbuser\",\n    \"password\": \"dbpassword\",\n    \"name\": \"test\"\n  },\n  \"paths\": {\n    \"default\": {\n      \"datadir\": \"/var/lib/data\",\n      \"array\": [\n        \"first value\",\n        \"second value\",\n        \"third value\"\n      ]\n    }\n  }\n}\n```\n\n## License\n(The MIT License)\n\nCopyright 2014 Rob Halff. All rights reserved.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to\ndeal in the Software without restriction, including without limitation the\nrights to use, copy, modify, merge, publish, distribute, sublicense, and/or\nsell copies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\nFROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS\nIN THE SOFTWARE.\n",
  "readmeFilename": "README.md",
  "_id": "confert@0.3.1",
  "_from": "confert@^0.3.0"
}
